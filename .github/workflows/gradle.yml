# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-upload
          dependency-graph-exclude-configurations: 'detachedConfiguration.*'

      - name: Build with Gradle Wrapper
        run: ./gradlew build koverXmlReport

      # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
      # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
      #
      # - name: Setup Gradle
      #   uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
      #   with:
      #     gradle-version: '8.5'
      #
      # - name: Build with Gradle 8.5
      #   run: gradle build

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Unit Test Results
          path: |
            ${{ github.workspace }}/**/build/test-results/**/*.xml
            !${{ github.workspace }}/**/konsist/build/test-results/**/*.xml

      - name: Upload Konsist Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Konsist Test Results
          path: |
            ${{ github.workspace }}/**/konsist/build/test-results/**/*.xml

      - name: Upload Code Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Code Coverage Reports
          path: |
            ${{ github.workspace }}/**/build/reports/kover/report.xml

  test-results:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download Unit Test Results
        uses: actions/download-artifact@v4
        with:
          name: Unit Test Results
          path: tests

      - name: Download Konsist Test Results
        uses: actions/download-artifact@v4
        with:
          name: Konsist Test Results
          path: konsist

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2.18.0
        with:
          check_name: Unit Test Results
          files: tests/**/*.xml

      - name: Publish Konsist Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2.18.0
        if: always()
        with:
          check_name: Konsist Test Results
          files: konsist/**/*.xml

  coverage:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        module:
          - app
          - IAN
          - IAN/enums
          - IAN/listener
          - IAN/packets
          - IAN/udp
          - IAN/util
          - IAN/vesseldata
          - IAN/world
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download Code Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: Code Coverage Reports
          path: coverage

      - name: Code Coverage (${{ matrix.module }})
        uses: mi-kas/kover-report@v1.9
        with:
          title: Code Coverage (${{ matrix.module }})
          path: coverage/${{ matrix.module }}/build/reports/kover/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
          min-coverage-overall: ${{ matrix.module == 'app' && 0 || 90 }}

  total-coverage:
    needs: coverage
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download Code Coverage Reports
        uses: actions/download-artifact@v4
        with:
          name: Code Coverage Reports
          path: coverage

      - name: Total Code Coverage
        uses: mi-kas/kover-report@v1.9
        with:
          title: Total Code Coverage
          path: |
            coverage/app/build/reports/kover/report.xml
            coverage/IAN/build/reports/kover/report.xml
            coverage/IAN/enums/build/reports/kover/report.xml
            coverage/IAN/listener/build/reports/kover/report.xml
            coverage/IAN/packets/build/reports/kover/report.xml
            coverage/IAN/udp/build/reports/kover/report.xml
            coverage/IAN/util/build/reports/kover/report.xml
            coverage/IAN/vesseldata/build/reports/kover/report.xml
            coverage/IAN/world/build/reports/kover/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
