# This workflow runs Android UI tests

name: Android Instrumented Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    outputs:
      api-level: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Generate API version matrix
        id: generate
        run: echo matrix=[$(sed s/,$//g <<< $(seq -s ", " 21 35))] >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    needs: test-matrix
    strategy:
      fail-fast: false
      matrix:
        api-level: ${{ fromJSON(needs.test-matrix.outputs.api-level) }}
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.api-level }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Generate secret files
        run: |
          echo ${{ secrets.KEYSTORE_PROPERTIES }} | base64 -d > ${{ github.workspace }}/keystore.properties
          echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > ${{ github.workspace }}/app/artemis-agent-keystore.jks
          echo ${{ secrets.GOOGLE_SERVICES }} | base64 -d > ${{ github.workspace }}/app/google-services.json

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Android SDK Tools
        uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407 # v3

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4

      - name: Enable script execution
        run: chmod +x .github/workflows/instrumented-test-recording.sh

      - name: Download and extract scrcpy
        uses: robinraju/release-downloader@v1.12
        with:
          repository: Genymobile/scrcpy
          latest: true
          fileName: scrcpy-linux-*.tar.gz
          extract: true

      - name: Run tests on API ${{ matrix.api-level }}
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-snapshot-save -no-window -no-metrics -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: .github/workflows/instrumented-test-recording.sh ${{ matrix.api-level }}

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: "Instrumented Test Results (API ${{ matrix.api-level }})"
          path: ${{ github.workspace }}/app/build/outputs/androidTest-results/connected/**/*.xml

      - name: Upload Test Recordings
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: "Instrumented Test Recording (API ${{ matrix.api-level }})"
          path: testRecording-${{ matrix.api-level }}.mp4

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          path: tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@afb2984f4d89672b2f9d9c13ae23d53779671984 # v2
        with:
          check_name: Instrumented Test Results
          files: tests/**/*.xml
