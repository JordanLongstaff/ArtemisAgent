# This workflow runs Android UI tests

name: Android Instrumented Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 ]
    steps:
      - uses: actions/checkout@v4

      - name: Generate secret files
        run: |
          echo ${{ secrets.KEYSTORE_PROPERTIES }} | base64 -d > ${{ github.workspace }}/keystore.properties
          echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > ${{ github.workspace }}/app/artemis-agent-keystore.jks
          echo ${{ secrets.GOOGLE_SERVICES }} | base64 -d > ${{ github.workspace }}/app/google-services.json

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Android SDK Tools
        uses: android-actions/setup-android@v3.2.2

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests on API ${{ matrix.api-level }}
        uses: reactivecircus/android-emulator-runner@v2.33.0
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-snapshot-save -no-window -no-metrics -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "Instrumented Test Results (API ${{ matrix.api-level }})"
          path: ${{ github.workspace }}/app/build/outputs/androidTest-results/connected/**/*.xml

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          path: tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2.18.0
        with:
          check_name: Instrumented Test Results
          files: tests/**/*.xml
