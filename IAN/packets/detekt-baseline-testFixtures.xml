<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>LongMethod:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.Data$override fun validateObject(obj: ArtemisPlayer)</ID>
    <ID>LongParameterList:ObjectParserFlags.kt$( arb1: Arb&lt;T1&gt;, arb2: Arb&lt;T2&gt;, arb3: Arb&lt;T3&gt;, arb4: Arb&lt;T4&gt;, arb5: Arb&lt;T5&gt;, arb6: Arb&lt;T6&gt;, )</ID>
    <ID>LongParameterList:ObjectParserFlags.kt$( arb1: Arb&lt;T1&gt;, arb2: Arb&lt;T2&gt;, arb3: Arb&lt;T3&gt;, arb4: Arb&lt;T4&gt;, arb5: Arb&lt;T5&gt;, arb6: Arb&lt;T6&gt;, arb7: Arb&lt;T7&gt;, )</ID>
    <ID>LongParameterList:ObjectParserFlags.kt$( arb1: Arb&lt;T1&gt;, arb2: Arb&lt;T2&gt;, arb3: Arb&lt;T3&gt;, arb4: Arb&lt;T4&gt;, arb5: Arb&lt;T5&gt;, arb6: Arb&lt;T6&gt;, arb7: Arb&lt;T7&gt;, arb8: Arb&lt;T8&gt;, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.NpcShipParser.V1.Data$( objectID: Int, override val version: Version, flags1: NpcFlags1, flags2: NpcFlags2Old, flags3: NpcFlags3, flags4: NpcFlags4, private val flags5: NpcFlags5Old, private val flags6: NpcFlags6Old, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.NpcShipParser.V2.Data$( objectID: Int, override val version: Version, flags1: NpcFlags1, flags2: NpcFlags2Old, flags3: NpcFlags3, flags4: NpcFlags4, private val flags5: NpcFlags5New, private val flags6: NpcFlags6New, private val flags7: NpcFlags7, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.NpcShipParser.V3.Data$( objectID: Int, override val version: Version, flags1: NpcFlags1, flags2: NpcFlags2New, flags3: NpcFlags3, flags4: NpcFlags4, private val flags5: NpcFlags5New, private val flags6: NpcFlags6New, private val flags7: NpcFlags7, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.Data$( objectID: Int, override val version: Version, private val flags1: PlayerFlags1, private val flags2: PlayerFlags2, private val flags3: PlayerFlags3, private val flags4: PlayerFlags4, private val flags5: PlayerFlags5, private val flags6: PlayerFlags6, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.Data.New$( objectID: Int, version: Version, flags1: PlayerFlags1, flags2: PlayerFlags2, flags3: PlayerFlags3New, flags4: PlayerFlags4, flags5: PlayerFlags5, flags6: PlayerFlags6, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.Data.Old$( objectID: Int, version: Version, flags1: PlayerFlags1, flags2: PlayerFlags2, flags3: PlayerFlags3Old, flags4: PlayerFlags4, flags5: PlayerFlags5, flags6: PlayerFlags6, )</ID>
    <ID>LongParameterList:ObjectParserTestConfig.kt$ObjectParserTestConfig.UpgradesParser.Data$( objectID: Int, private val a1: UpgradesByteFlags, private val a2: UpgradesByteFlags, private val a3: UpgradesByteFlags, private val ac: UpgradesByteFlags, private val c2: UpgradesByteFlags, private val c3: UpgradesByteFlags, private val c4: UpgradesByteFlags, private val t1: UpgradesShortFlags, private val t2: UpgradesShortFlags, private val t3: UpgradesShortFlags, private val t4: UpgradesEndFlags, )</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.NpcShipParser.V1$3</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.NpcShipParser.V1$997</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.V2$3</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.PlayerShipParser.V2$997</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.Unobserved.Anomaly.V1$3</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.Unobserved.Anomaly.V1$997</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.V1$3</ID>
    <ID>MagicNumber:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.V1$997</ID>
    <ID>SpreadOperator:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.WeaponsData$(*countFlags)</ID>
    <ID>SpreadOperator:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.WeaponsData$(*statusFlags)</ID>
    <ID>SpreadOperator:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.WeaponsData$(*timeFlags)</ID>
    <ID>SpreadOperator:ObjectParserTestConfig.kt$ObjectParserTestConfig.WeaponsParser.WeaponsData$(*typeFlags)</ID>
    <ID>TooManyFunctions:ObjectParserFlags.kt$com.walkertribe.ian.protocol.core.world.ObjectParserFlags.kt</ID>
  </CurrentIssues>
</SmellBaseline>
